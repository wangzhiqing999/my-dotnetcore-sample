@page "/todos"
@using A0050_BlazorApp.Model
@using A0050_BlazorApp.Shared

<div class="row">
    <div class="col"><h3>To Do List</h3></div>
    <div class="col"><h5 class="float-right">Total Minutes: @TotalCount</h5></div>
</div>
 
<br />
<table class="table">
    <tr>
        <th>Title</th>
        <th>Minutes</th>
        <th></th>
    </tr>
    @foreach (var todo in ToDos)
    {
        <ToDoItem Item="todo" OnMinutesAdded="OnMinutesAddedHandler" />
    }
</table>
 

<hr/>

<p>
    本例子是测试：页面（父组件） 调用子组件。
    <br/>
    1.在子组件中声明一个 EventCallback 或 EventCallback &lt; T &gt; 委托
    <br/>
    2.在父组件中附加一个到子组件的 EventCallback 或 EventCallback &lt; T &gt; 的回调方法
    <br/>
    3：当子组件需要与父组件通信时，使用 InvokeAsync(Object) 或 InvokeAsync(T) 方法调用父组件的回调方法。
</p>


@code {
 
    

    public List<TodoData> ToDos { get; set; }
    public int TotalCount { get; set; }
 
    protected override void OnInitialized()
    {
        ToDos = new List<TodoData>()
        {
                new TodoData() { Title = "Analysis", Minutes = 40 },
                new TodoData() { Title = "Design", Minutes = 30 },
                new TodoData() { Title = "Implementation", Minutes = 75 },
                new TodoData() { Title = "Testing", Minutes = 40 }
        };
 
        UpdateTotalMinutes();
    }
 
    public void UpdateTotalMinutes()
    {
        TotalCount = ToDos.Sum(x => x.Minutes);
    }
 
    public void OnMinutesAddedHandler(MouseEventArgs e)
    {
        UpdateTotalMinutes();
    }
}