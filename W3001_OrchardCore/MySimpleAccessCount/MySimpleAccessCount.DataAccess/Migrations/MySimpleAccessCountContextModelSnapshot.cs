// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MySimpleAccessCount.DataAccess;

namespace MySimpleAccessCount.Migrations
{
    [DbContext(typeof(MySimpleAccessCountContext))]
    partial class MySimpleAccessCountContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("MySimpleAccessCount.Model.PageAccessCount", b =>
                {
                    b.Property<string>("PageCode")
                        .HasColumnName("page_code")
                        .HasColumnType("TEXT")
                        .HasMaxLength(16);

                    b.Property<byte>("AccessMultiple")
                        .HasColumnName("access_multiple")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InitAccessCount")
                        .HasColumnName("init_access_count")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSaveDailyCount")
                        .HasColumnName("is_save_daily_count")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasColumnName("page_name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<int>("RealAccessCount")
                        .HasColumnName("real_access_count")
                        .HasColumnType("INTEGER");

                    b.HasKey("PageCode");

                    b.ToTable("my_page_access_count");
                });

            modelBuilder.Entity("MySimpleAccessCount.Model.PageDailyAccessCount", b =>
                {
                    b.Property<string>("PageCode")
                        .HasColumnName("page_code")
                        .HasColumnType("TEXT")
                        .HasMaxLength(16);

                    b.Property<DateTime>("AccessDate")
                        .HasColumnName("access_date")
                        .HasColumnType("TEXT");

                    b.Property<int>("RealAccessCount")
                        .HasColumnName("real_access_count")
                        .HasColumnType("INTEGER");

                    b.HasKey("PageCode", "AccessDate");

                    b.ToTable("my_page_daily_access_count");
                });

            modelBuilder.Entity("MySimpleAccessCount.Model.PageDailyAccessCount", b =>
                {
                    b.HasOne("MySimpleAccessCount.Model.PageAccessCount", "PageAccessCountData")
                        .WithMany("PageDailyAccessCountList")
                        .HasForeignKey("PageCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
