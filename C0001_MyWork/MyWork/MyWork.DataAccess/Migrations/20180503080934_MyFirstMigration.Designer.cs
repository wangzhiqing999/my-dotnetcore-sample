// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MyWork.DataAccess;
using System;

namespace MyWork.Migrations
{
    [DbContext(typeof(MyWorkContext))]
    [Migration("20180503080934_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyWork.Model.StockInfo", b =>
                {
                    b.Property<string>("StockCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stock_code")
                        .HasMaxLength(16);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreateUser")
                        .HasColumnName("create_user")
                        .HasMaxLength(32);

                    b.Property<DateTime>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdateUser")
                        .HasColumnName("last_update_user")
                        .HasMaxLength(32);

                    b.Property<string>("Market")
                        .HasColumnName("market")
                        .HasMaxLength(32);

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasMaxLength(16);

                    b.Property<string>("StockName")
                        .HasColumnName("stock_name")
                        .HasMaxLength(32);

                    b.Property<string>("StockNamePinyin")
                        .HasColumnName("stock_name_pinyin")
                        .HasMaxLength(32);

                    b.HasKey("StockCode");

                    b.ToTable("mw_stock_info");
                });

            modelBuilder.Entity("MyWork.Model.StockPool", b =>
                {
                    b.Property<long>("StockPoolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stock_pool_id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreateUser")
                        .HasColumnName("create_user")
                        .HasMaxLength(32);

                    b.Property<DateTime>("LastUpdateTime")
                        .IsConcurrencyToken()
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdateUser")
                        .HasColumnName("last_update_user")
                        .HasMaxLength(32);

                    b.Property<long>("OrganizationID")
                        .HasColumnName("organization_id");

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasMaxLength(16);

                    b.Property<string>("StockPoolName")
                        .HasColumnName("stock_pool_name");

                    b.HasKey("StockPoolID");

                    b.ToTable("mw_stock_pool");
                });

            modelBuilder.Entity("MyWork.Model.StockPoolDetail", b =>
                {
                    b.Property<long>("StockPoolID")
                        .HasColumnName("stock_pool_id");

                    b.Property<string>("StockCode")
                        .HasColumnName("stock_code")
                        .HasMaxLength(16);

                    b.HasKey("StockPoolID", "StockCode");

                    b.HasIndex("StockCode");

                    b.ToTable("mw_stock_pool_detail");
                });

            modelBuilder.Entity("MyWork.Model.StockPoolDetail", b =>
                {
                    b.HasOne("MyWork.Model.StockInfo", "Stock")
                        .WithMany("StockPoolDetails")
                        .HasForeignKey("StockCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyWork.Model.StockPool", "Pool")
                        .WithMany("StockPoolDetails")
                        .HasForeignKey("StockPoolID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
